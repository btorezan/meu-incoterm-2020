import 'package:meuincoterm2020/models/incoterm.dart';

class IncotermsController {
  List<Incoterm> incoterms = [];
  IncotermsController() {
    incoterms.add(Incoterm('CPT', 'CARRIAGE PAID TO', 'TRANSPORTE PAGO ATÉ', [
      false,
      true,
      false,
      true,
      false,
      false,
      false,
      false,
      true,
      false,
      true,
      false,
      true,
      true,
      true,
      false,
      true,
      true,
      false,
      false,
      true,
      true,
      true,
      false,
      true,
      false,
      false,
      false,
      true,
      true,
      false,
      true,
      true,
      false,
      true,
      false,
      false
    ]));
    incoterms.add(Incoterm('CIP', 'CARRIAGE AND INSURANCE PAID TO', 'TRANSPORTE E SEGUROS PAGOS ATÉ', [
      false,
      true,
      false,
      true,
      false,
      true,
      true,
      true,
      true,
      false,
      true,
      true,
      false,
      true,
      true,
      false,
      true,
      true,
      false,
      false,
      true,
      true,
      true,
      false,
      false,
      false,
      false,
      false,
      true,
      true,
      false,
      true,
      true,
      false,
      true,
      false,
      false
    ]));
    incoterms.add(Incoterm('DAP', 'DELIVERED AT PLACE', 'ENTREGUE NO LOCAL', [
      false,
      false,
      false,
      false,
      false,
      false,
      true,
      false,
      true,
      false,
      true,
      true,
      false,
      false,
      false,
      false,
      true,
      true,
      true,
      true,
      true,
      false,
      true,
      true,
      true,
      true,
      true,
      false,
      true,
      true,
      false,
      true,
      true,
      false,
      true,
      false,
      false
    ]));
    incoterms.add(Incoterm('DPU', 'DELIVERED AT PLACE UNLOADED', 'ENTREGUE NO LOCAL DESCARREGADO', [
      false,
      false,
      false,
      false,
      true,
      false,
      false,
      false,
      true,
      false,
      true,
      true,
      true,
      false,
      false,
      true,
      false,
      true,
      true,
      true,
      false,
      false,
      false,
      true,
      true,
      false,
      false,
      false,
      true,
      true,
      false,
      true,
      false,
      false,
      true,
      false,
      false
    ]));
    incoterms.add(Incoterm('DDP', 'DELIVERED DUTY PAID', 'ENTREGUE COM DIREITOS PAGOS', [
      false,
      false,
      false,
      false,
      false,
      false,
      true,
      false,
      true,
      false,
      true,
      true,
      false,
      false,
      false,
      true,
      true,
      true,
      true,
      true,
      false,
      false,
      true,
      true,
      true,
      true,
      true,
      false,
      true,
      false,
      false,
      false,
      true,
      false,
      false,
      true,
      false
    ]));
    incoterms.add(Incoterm('EX WORKS', 'EX WORKS', 'NA ORIGEM', [
      false,
      true,
      true,
      true,
      true,
      false,
      false,
      true,
      true,
      true,
      false,
      false,
      false,
      true,
      false,
      false,
      false,
      false,
      false,
      false,
      true,
      true,
      false,
      true,
      false,
      false,
      false,
      false,
      true,
      true,
      true,
      true,
      true,
      true,
      true,
      false,
      true
    ]));
    incoterms.add(Incoterm('CFR', 'COST AND FREIGHT', 'CUSTO E FRETE', [
      true,
      true,
      false,
      true,
      true,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      true,
      true,
      true,
      false,
      true,
      true,
      false,
      true,
      true,
      true,
      true,
      false,
      true,
      false,
      false,
      false,
      true,
      true,
      false,
      true,
      true,
      false,
      true,
      false,
      false
    ]));
    incoterms.add(Incoterm('CIF', 'COST, INSURANCE AND FREIGHT', 'CUSTO, SEGURO E FRETE', [
      true,
      true,
      false,
      true,
      true,
      true,
      true,
      true,
      false,
      false,
      false,
      false,
      true,
      true,
      true,
      false,
      true,
      true,
      false,
      false,
      true,
      true,
      true,
      false,
      true,
      false,
      false,
      false,
      true,
      true,
      false,
      true,
      true,
      false,
      true,
      false,
      false
    ]));
    incoterms.add(Incoterm('FAS', 'FREE ALONGSIDE SHIP', 'LIVRE AO LADO DO NAVIO', [
      true,
      true,
      true,
      true,
      false,
      false,
      false,
      false,
      true,
      true,
      false,
      true,
      false,
      true,
      true,
      false,
      true,
      true,
      false,
      false,
      true,
      true,
      false,
      false,
      false,
      false,
      false,
      true,
      true,
      true,
      false,
      true,
      true,
      false,
      true,
      false,
      false
    ]));
    incoterms.add(Incoterm('FCA', 'FREE CARRIER', 'LIVRE NO TRANSPORTADOR', [
      false,
      true,
      true,
      true,
      false,
      false,
      false,
      false,
      false,
      true,
      false,
      true,
      false,
      false,
      true,
      false,
      false,
      false,
      false,
      false,
      true,
      true,
      false,
      false,
      false,
      false,
      false,
      false,
      true,
      true,
      false,
      true,
      true,
      false,
      true,
      false,
      false
    ]));
    incoterms.add(Incoterm('FOB', 'FREE ON BOARD', 'LIVRE À BORDO', [
      true,
      true,
      true,
      true,
      true,
      false,
      false,
      false,
      false,
      true,
      false,
      false,
      true,
      true,
      true,
      false,
      true,
      true,
      false,
      false,
      true,
      true,
      false,
      false,
      false,
      false,
      false,
      true,
      true,
      true,
      false,
      true,
      true,
      false,
      true,
      false,
      false
    ]));
  }

  List<Incoterm> updatePossibleMatches(List<Incoterm> possibleMatches, int currentQuestion, bool currentAnswer) {
    possibleMatches.removeWhere((incoterm) => incoterm.answers[currentQuestion] != currentAnswer);
    return possibleMatches;
  }
}
